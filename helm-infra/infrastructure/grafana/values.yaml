grafana:  
  image:
    registry: docker.io
    repository: grafana/grafana
    tag: ""
    sha: ""
    pullPolicy: IfNotPresent

  # ingress:
  #   enabled: true
  #   ingressClassName: nginx
  #   hosts:
  #     - grafana.iroussev.com
  #   annotations:
  #     cert-manager.io/cluster-issuer: letsencrypt-prod
  #     nginx.ingress.kubernetes.io/ssl-redirect: "false"
  #   paths:
  #     - pathType: Prefix
  #       path: /
  #       backend:
  #         service:
  #           name: grafana
  #           port:
  #             number: 80
  #   tls:
  #   - secretName: grafana-tls
  #     hosts:
  #       - grafana.iroussev.com

  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    path: /
    pathType: Prefix
    hosts:
      - grafana.iroussev.com
    tls:
     - secretName: grafana-tls
       hosts:
         - grafana.iroussev.com

  persistence:
    type: pvc
    enabled: true
    volumeName: ""
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    finalizers:
      - kubernetes.io/pvc-protection
    lookupVolumeName: true

  grafana.ini:
    paths:
      data: /var/lib/grafana/
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
    analytics:
      check_for_updates: true
    log:
      mode: console
    grafana_net:
      url: https://grafana.net
    server:
      domain: "{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ tpl (.Values.ingress.hosts | first) . }}{{ else }}''{{ end }}"


