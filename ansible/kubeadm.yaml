- name: Disable swap
  ansible.builtin.command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Ensure swap is disabled in fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*swap.*)$'
    replace: '# \1'

- name: Install required packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Create keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker GPG key (dearmored)
  ansible.builtin.shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Add Docker repo (Ubuntu 24.04)
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
    
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install Docker
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Configure Docker daemon
  ansible.builtin.copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }
  notify: Restart docker

- name: Create Kubernetes keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Kubernetes GPG key
  ansible.builtin.shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    chmod a+r /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes repo
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
    state: present
    filename: kubernetes
    
- name: Install kubelet, kubeadm, kubectl
  ansible.builtin.apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

- name: Hold Kubernetes packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Enable br_netfilter module
  ansible.builtin.modprobe:
    name: br_netfilter
    state: present

- name: Make br_netfilter persistent
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: br_netfilter
    create: yes

- name: Enable IP forwarding and bridge netfilter
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables
    - net.ipv4.ip_forward

- name: Remove containerd config
  ansible.builtin.file:
    path: /etc/containerd/config.toml
    state: absent

- name: Create containerd directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Generate default containerd config
  ansible.builtin.shell: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml

- name: Enable systemd cgroup driver in containerd
  ansible.builtin.replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    replace: 'SystemdCgroup = true'

- name: Restart containerd
  ansible.builtin.systemd:
    name: containerd
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Create .kube directory
  ansible.builtin.file:
    path: /home/ivan/.kube
    state: directory
    owner: ivan
    group: ivan
    mode: '0755'

- name: Initialize kubeadm (single-node)
  ansible.builtin.command: kubeadm init --pod-network-cidr=192.168.0.0/16
  args:
    creates: /etc/kubernetes/admin.conf
  register: kubeadm_init


- name: Copy kubeconfig for user
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ivan/.kube/config
    remote_src: yes
    owner: ivan
    group: ivan
    mode: '0600'

- name: Allow pods on control-plane node
  ansible.builtin.command: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  failed_when: false

- name: Install Calico CNI
  ansible.builtin.command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Display cluster info
  ansible.builtin.debug:
    var: cluster_info.stdout_lines

- name: Get node status
  ansible.builtin.command: kubectl get nodes -o wide
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: node_status
  changed_when: false

- name: Display node status
  ansible.builtin.debug:
    var: node_status.stdout_lines

- name: Install Helm3
  ansible.builtin.shell: |
    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    chmod 700 get_helm.sh
    ./get_helm.sh